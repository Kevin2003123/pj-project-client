[{"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\index.js":"1","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\App.js":"2","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\auth\\Login.js":"4","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\layout\\Footer.js":"6","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\homePage\\Photos.js":"7","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\layout\\Navbar.js":"8","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\auth.js":"9","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\store.js":"11","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\index.js":"12","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\image.js":"13","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\auth.js":"14","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\UploadAvatar.js":"15","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\images.js":"16","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\util.js":"17","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\utils.js":"18","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\imageItems.js":"19","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\ImageItems.js":"20","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\profile\\MyProfile.js":"21","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\profile\\ProfileView.js":"22","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\profile.js":"23","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\profiles.js":"24","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\UploadImage.js":"25"},{"size":478,"mtime":1609186988054,"results":"26","hashOfConfig":"27"},{"size":1438,"mtime":1612046058788,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":4343,"mtime":1612659287969,"results":"30","hashOfConfig":"27"},{"size":5569,"mtime":1612707022604,"results":"31","hashOfConfig":"27"},{"size":369,"mtime":1610935523293,"results":"32","hashOfConfig":"27"},{"size":4785,"mtime":1612640520772,"results":"33","hashOfConfig":"27"},{"size":4907,"mtime":1612657274262,"results":"34","hashOfConfig":"27"},{"size":2308,"mtime":1612631088340,"results":"35","hashOfConfig":"27"},{"size":255,"mtime":1610310805300,"results":"36","hashOfConfig":"27"},{"size":395,"mtime":1609795468044,"results":"37","hashOfConfig":"27"},{"size":227,"mtime":1611699796941,"results":"38","hashOfConfig":"27"},{"size":1529,"mtime":1612705039849,"results":"39","hashOfConfig":"27"},{"size":1366,"mtime":1610166083529,"results":"40","hashOfConfig":"27"},{"size":6060,"mtime":1612645732384,"results":"41","hashOfConfig":"27"},{"size":4229,"mtime":1612635535550,"results":"42","hashOfConfig":"27"},{"size":931,"mtime":1612140118195,"results":"43","hashOfConfig":"27"},{"size":749,"mtime":1612140275998,"results":"44","hashOfConfig":"27"},{"size":219,"mtime":1610846345879,"results":"45","hashOfConfig":"27"},{"size":1421,"mtime":1612706029690,"results":"46","hashOfConfig":"27"},{"size":7805,"mtime":1612647140622,"results":"47","hashOfConfig":"27"},{"size":4096,"mtime":1612706703934,"results":"48","hashOfConfig":"27"},{"size":831,"mtime":1612137044065,"results":"49","hashOfConfig":"27"},{"size":2122,"mtime":1612631100486,"results":"50","hashOfConfig":"27"},{"size":7212,"mtime":1612652427189,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"149gt6x",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\index.js",[],["114","115"],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\App.js",["116"],"import './App.css';\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Photos from './components/homePage/Photos';\nimport UploadAvatar from './components/images/UploadAvatar';\nimport ProfileView from './components/profile/ProfileView';\nimport MyProfile from './components/profile/MyProfile';\nimport { loadUser } from './actions/auth';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport UploadImage from './components/images/UploadImage';\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route exact path='/' component={Photos} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/uploadAvatar' component={UploadAvatar} />\n            <Route exact path='/myProfile' component={MyProfile} />\n            <Route exact path='/profile/view/:id?' component={ProfileView} />\n            <Route exact path='/upload' component={UploadImage} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\layout\\Footer.js",["117"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer className=' bottom-0 bg-gray-800 text-white text-center py-3 w-full pl-5'>\r\n      <i className='far fa-copyright'></i> Kevin Fangio Reyes Lopez | cel:\r\n      809-614-4753\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\homePage\\Photos.js",["118"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport UploadAvatar from '../images/UploadAvatar';\r\nimport Footer from '../layout/Footer';\r\nimport { getImages } from '../../actions/images';\r\nimport ImageItems from '../images/ImageItems';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Gallery from 'react-photo-gallery';\r\nimport { setPage, setSearch } from '../../actions/utils';\r\nimport { Link } from 'react-router-dom';\r\nimport UploadImage from '../images/UploadImage';\r\n\r\nconst Photos = ({\r\n  isAuthenticated,\r\n  user,\r\n  getImages,\r\n  images: { images, lastImage },\r\n  page,\r\n  setPage,\r\n  search,\r\n  setSearch,\r\n  imageUpload,\r\n  loadingImages\r\n}) => {\r\n  useEffect(() => {\r\n    getImages(page, search);\r\n  }, [getImages, page, search, imageUpload]);\r\n\r\n  useEffect(() => {\r\n    isAuthenticated ? setShow('hidden') : setShow('');\r\n  }, [isAuthenticated]);\r\n\r\n  const [show, setShow] = useState('');\r\n\r\n  const preview = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    if (images.some((image) => image.id !== lastImage) || images.length > 0) {\r\n      console.log(page);\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col relative z-30 h-full w-full'>\r\n      <Navbar />\r\n\r\n      <UploadAvatar />\r\n      <UploadImage />\r\n      <div className='flex flex-row relative items-center justify-center '>\r\n        <img\r\n          src='https://source.unsplash.com/1600x900/?nature'\r\n          alt='Random nature'\r\n          className='h-screen-landing-img'\r\n        />\r\n        <div className='absolute -mt-12 z-20'>\r\n          <h1 className=' text-white  text-4xl font-semibold title  text-center mb-4'>\r\n            The best photos shared by talented creators\r\n          </h1>\r\n          <div className='flex flex-row justify-center'>\r\n            <Link to='/login'>\r\n              <button\r\n                className={`bg-gray-300  px-4 py-2 rounded hover:bg-gray-400 hover:text-white  mr-7 profile-name ${show}`}\r\n              >\r\n                Sign In\r\n              </button>\r\n            </Link>\r\n            <Link to='/register'>\r\n              <button\r\n                className={`bg-gray-300 px-4 py-2 rounded hover:bg-gray-400 hover:text-white   profile-name ${show}`}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='transparentCover z-10'></div>\r\n      </div>\r\n      <div className='relative flex flex-wrap'>\r\n        {images.map((image) => (\r\n          <ImageItems\r\n            image={image}\r\n            loadingImages={loadingImages}\r\n            key={uuidv4()}\r\n          />\r\n        ))}\r\n      </div>\r\n      <nav className='flex flex-row bg-white shadow-md w-64 mx-auto justify-center rounded-full border bg-blue-500 mb-4 font-bold text-white mt-4'>\r\n        {page > 1 ? (\r\n          <div\r\n            onClick={() => preview()}\r\n            className='mr-auto cursor-pointer w-24 text-center border-r-2 border-white rounded-l-full hover:bg-blue-600'\r\n          >\r\n            <i class='fas fa-chevron-left'></i>\r\n          </div>\r\n        ) : (\r\n          <div className='mr-auto  w-24 text-center border-r-2 border-white rounded-l-full text-white'></div>\r\n        )}\r\n\r\n        <div className='text-white font-bold'>{page}</div>\r\n        {images.some((image) => image.id === lastImage) ? (\r\n          <div className='ml-auto w-24 text-center border-l-2 border-white rounded-r-full text-white'></div>\r\n        ) : (\r\n          <div\r\n            onClick={() => next()}\r\n            className='ml-auto cursor-pointer w-24 text-center border-l-2 border-white rounded-r-full  hover:bg-blue-600'\r\n          >\r\n            <i class='fas fa-chevron-right'></i>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotos.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  getImages: PropTypes.func.isRequired,\r\n  images: PropTypes.object.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  setPage: PropTypes.func.isRequired,\r\n  search: PropTypes.string.isRequired,\r\n  setSearch: PropTypes.func.isRequired,\r\n  imageUpload: PropTypes.object.isRequired,\r\n  loadingImages: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  images: state.image.images,\r\n  page: state.util.page,\r\n  search: state.util.search,\r\n  imageUpload: state.image.imageUpload,\r\n  loadingImages: state.image.loadingImages\r\n});\r\nexport default connect(mapStateToProps, { getImages, setPage, setSearch })(\r\n  Photos\r\n);\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\layout\\Navbar.js",["119"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  showUploadAvatar,\r\n  resetPage,\r\n  setSearch,\r\n  showUploadImage\r\n} from '../../actions/utils';\r\nimport { getImages } from '../../actions/images';\r\nimport UploadImage from '../images/UploadImage';\r\nimport { logout } from '../../actions/auth';\r\nimport perfil from '../../img/perfil.jpg';\r\n\r\nconst Navbar = ({\r\n  isAuthenticated,\r\n  user,\r\n  showUploadAvatar,\r\n  getImages,\r\n  images,\r\n  page,\r\n  resetPage,\r\n  setSearch,\r\n  showUploadImage,\r\n  logout\r\n}) => {\r\n  const [show, setShow] = useState({ isclicked: false, show: 'hidden' });\r\n  const [showUser, setShowUser] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('tratando de esconder');\r\n\r\n    isAuthenticated ? setShowUser('') : setShowUser('hidden');\r\n  }, [isAuthenticated]);\r\n\r\n  const dropDown = () => {\r\n    if (!show.isclicked) {\r\n      setShow({ isclicked: true, show: '' });\r\n    } else {\r\n      setShow({ isclicked: false, show: 'hidden' });\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    setSearch(e);\r\n    console.log(e);\r\n    getImages(1, e);\r\n    resetPage();\r\n  };\r\n\r\n  const logOut = () => {\r\n    logout();\r\n    setShow({ isclicked: false, show: 'hidden' });\r\n  };\r\n\r\n  return (\r\n    <div className='w-full relative '>\r\n      <nav className=' bg-gray-800 flex flex-row py-2 items-center relative h-20'>\r\n        <Link className='z-40' to='/'>\r\n          <i className='fas fa-camera-retro text-blue-500 ml-3 fa-3x m-0 p-0  m-0 p-0 z-40 hover:text-blue-600'></i>\r\n        </Link>\r\n        <div className='bg-white logo-w ml-3 absolute z-30 '></div>\r\n\r\n        <h1 className=' font-bold text-lg text-white ml-2 nav-title d-sm'>\r\n          <span className='text-blue-500 '>Shared</span> Photos\r\n        </h1>\r\n\r\n        <input\r\n          type='search'\r\n          className='ml-8 search-w pl-4 font-medium mr-3 sm-ml'\r\n          placeholder='Search for free photos'\r\n          onChange={(e) => onChange(e.target.value)}\r\n        />\r\n\r\n        <h4 className={`text-white font-bold ml-auto welcome d-sm ${showUser}`}>\r\n          <span className='text-blue-500'>Welcome</span> {user.name}\r\n        </h4>\r\n        <img\r\n          className={`ml-auto mr-3 rounded-full h-14 w-14 flex items-center justify-center cursor-pointer object-cover ${showUser}`}\r\n          onClick={() => dropDown()}\r\n          src={user.avatar ? user.avatar : perfil}\r\n          alt={user.name}\r\n        />\r\n      </nav>\r\n\r\n      <span\r\n        className={`absolute  w-64 right-0 mr-3 mt-2 rounded shadow-md flex flex-col items-center ${show.show} z-40 bg-white`}\r\n      >\r\n        <div className='relative flex flex-row justify-center h-16 mt-3 '>\r\n          <img\r\n            src={user.avatar ? user.avatar : perfil}\r\n            alt={user.name}\r\n            className='rounded-full h-16 w-16 object-cover'\r\n          />\r\n\r\n          <i\r\n            onClick={() => showUploadAvatar('')}\r\n            className='fas fa-camera absolute flex rounded-full h-6 w-6 bg-white items-center justify-center shadow-md cursor-pointer hover:text-blue-400 bottom-0 right-0'\r\n          ></i>\r\n        </div>\r\n\r\n        <h1 className='text-lg'>{user.name}</h1>\r\n        <h3 className='text-base text-gray-500'>{user.email}</h3>\r\n\r\n        <Link\r\n          to='/myProfile'\r\n          className='border rounded-full py-1 px-4 mt-3 hover:bg-gray-100'\r\n        >\r\n          Manage your Account\r\n        </Link>\r\n        <div\r\n          className='border rounded-full py-1 px-4 mt-3 hover:bg-gray-100 cursor-pointer'\r\n          onClick={() => showUploadImage('')}\r\n        >\r\n          Upload image\r\n        </div>\r\n        <Link to={`/profile/view/${user.id}`}>\r\n          <div className='border rounded-full py-1 px-4 mt-3 hover:bg-gray-100 cursor-pointer'>\r\n            My images\r\n          </div>\r\n        </Link>\r\n        <hr className='w-full mt-5' />\r\n\r\n        <button\r\n          className='border rounded-full py-1 px-4 my-3 hover:bg-gray-100 cursor-pointer '\r\n          onClick={() => logOut()}\r\n        >\r\n          Log Out\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  showUploadAvatar: PropTypes.func.isRequired,\r\n  images: PropTypes.object.isRequired,\r\n  getImages: PropTypes.func.isRequired,\r\n  resetPage: PropTypes.func.isRequired,\r\n  setSearch: PropTypes.func.isRequired,\r\n  showUploadImage: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  images: state.image.images\r\n});\r\nexport default connect(mapStateToProps, {\r\n  showUploadAvatar,\r\n  getImages,\r\n  resetPage,\r\n  setSearch,\r\n  showUploadImage,\r\n  logout\r\n})(Navbar);\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\auth.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\store.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\index.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\image.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\UploadAvatar.js",["120","121","122","123","124","125"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport Footer from '../layout/Footer';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { updateAvatar } from '../../actions/images';\r\nimport { connect } from 'react-redux';\r\nimport { showUploadAvatar, setShowSpin } from '../../actions/utils';\r\nimport { loadUser } from '../../actions/auth';\r\nconst UploadAvatar = ({\r\n  updateAvatar,\r\n  uploadAvatar,\r\n  uploadAvatarError,\r\n  loadingAvatar,\r\n  showUpdateAvatar,\r\n  showUploadAvatar,\r\n  avatar,\r\n  loadUser,\r\n  showSpin,\r\n  setShowSpin\r\n}) => {\r\n  useEffect(() => {\r\n    showUploadAvatar('hidden');\r\n    setShowSpin('hidden');\r\n    loadUser();\r\n    setDisabled(false);\r\n  }, [avatar]);\r\n\r\n  useEffect(() => {\r\n    setDisabled(false);\r\n    setShowSpin('hidden');\r\n  }, [uploadAvatarError]);\r\n\r\n  const [hide, setHide] = useState('');\r\n  const [uploadSuccess, setUploadSuccess] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const {\r\n    acceptedFiles,\r\n    fileRejections,\r\n    getRootProps,\r\n    getInputProps\r\n  } = useDropzone({\r\n    accept: 'image/jpeg, image/png',\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  const acceptedFileItems = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map((e) => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name} className='mr-3'>\r\n      <div>\r\n        <img\r\n          src={file.preview}\r\n          width='100rem'\r\n          height='100rem'\r\n          alt='uploadedProfile'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    if (uploadAvatar && !uploadAvatarError && !loadingAvatar) {\r\n      setUploadSuccess('Upload Success');\r\n    } else if (!uploadAvatar && uploadAvatarError && !loadingAvatar) {\r\n      setUploadSuccess('Unable to upload');\r\n    }\r\n    console.log(uploadAvatar, uploadAvatarError, loadingAvatar);\r\n  }, [uploadAvatar, uploadAvatarError, loadingAvatar]);\r\n\r\n  const SendImage = () => {\r\n    setDisabled(true);\r\n    if (acceptedFileItems.length > 0) {\r\n      acceptedFiles.map((file) => updateAvatar(file));\r\n      setShowSpin('');\r\n    } else {\r\n      setUploadSuccess('Unable to upload');\r\n      setDisabled(false);\r\n      setShowSpin('hidden');\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`absolute flex flex-col w-full items-center  h-full bg-black m-0 p-0 bg-opacity-80 ${showUpdateAvatar} z-40 `}\r\n    >\r\n      <div className='relative flex flex-col items-center justify-center w-full shadow-md border uploadAvatar-w bg-white upload-avatar-m'>\r\n        <div className='flex flex-row px-3 mb-auto pt-3 border-b-2 shadow-md pb-3 w-full items-center'>\r\n          <h1 className='text-2xl'>Select profile photo</h1>\r\n          <i\r\n            onClick={() => showUploadAvatar('hidden')}\r\n            className='fas fa-times ml-auto cursor-pointer'\r\n          ></i>\r\n        </div>\r\n\r\n        <div\r\n          {...getRootProps({\r\n            className:\r\n              'relative flex flex-col items-center justify-center w-full h-full  border-dashed border-4 border-gray-600 '\r\n          })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <i className='fas fa-images text-gray-400 fa-5x '></i>\r\n          <h1 className='text-3xl text-gray-400 mt-3'>\r\n            Drag a profile photo here\r\n          </h1>\r\n          <div className='absolute bottom-0 mb-5 text-center flex flex-row justify-center items-center'>\r\n            {thumbs}\r\n            <div className='flex flex-col'>\r\n              <ul>{acceptedFileItems}</ul>\r\n              <ul>{fileRejectionItems}</ul>\r\n              <ul className={`${showSpin}`}>{uploadSuccess}</ul>\r\n            </div>\r\n            <div className={`ml-3 ${showSpin}`}>\r\n              <i className='fas fa-spinner spin'></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='flex flex-row w-full pl-5 py-2 border-t-2'>\r\n          {disabled ? (\r\n            <button className='mr-3 text-white bg-blue-200  rounded px-2 py-1 cursor-text'>\r\n              Set as profile photo\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className='mr-3 text-white bg-blue-400 hover:bg-blue-500 rounded px-2 py-1'\r\n              onClick={() => SendImage()}\r\n            >\r\n              Set as profile photo\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className='bg-gray-200 hover:bg-gray-300 rounded px-2 py-1'\r\n            onClick={() => showUploadAvatar('hidden')}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUploadAvatar.propTypes = {\r\n  updateAvatar: PropTypes.func.isRequired,\r\n  uploadAvatar: PropTypes.bool.isRequired,\r\n  uploadAvatarError: PropTypes.string.isRequired,\r\n  loadingAvatar: PropTypes.bool.isRequired,\r\n  showUploadAvatar: PropTypes.func.isRequired,\r\n  showUpdateAvatar: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  loadUser: PropTypes.func.isRequired,\r\n  showSpin: PropTypes.string.isRequired,\r\n  setShowSpin: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  uploadAvatar: state.image.uploadAvatar,\r\n  uploadAvatarError: state.image.updateAvatarError,\r\n  loadingAvatar: state.image.loadingAvatar,\r\n  showUpdateAvatar: state.util.showUploadAvatar,\r\n  avatar: state.image.avatar,\r\n  showSpin: state.util.showSpin\r\n});\r\nexport default connect(mapStateToProps, {\r\n  updateAvatar,\r\n  showUploadAvatar,\r\n  loadUser,\r\n  setShowSpin\r\n})(UploadAvatar);\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\images.js",["126"],"import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nconst CLAUDINARY_URL = 'https://api.cloudinary.com/v1_1/dfgmjyagu/image/upload';\r\nconst CLAUDINARY_UPLOAD_PRESET = 'usobgzw4';\r\nconst url = 'https://pj-images-server.herokuapp.com';\r\n\r\nexport const updateAvatar = (image) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  var formData = new FormData();\r\n  formData.append('file', image);\r\n  formData.append('upload_preset', CLAUDINARY_UPLOAD_PRESET);\r\n\r\n  const body = formData;\r\n\r\n  try {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    const res = await axios.post(CLAUDINARY_URL, body);\r\n    if (localStorage.token) {\r\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\r\n        'token'\r\n      );\r\n    }\r\n    dispatch({\r\n      type: 'UPDATE_AVATAR_CLOUD_SUCCESS',\r\n      payload: res.data.url\r\n    });\r\n\r\n    const body2 = {\r\n      query: `mutation{updateAvatar(avatar:\"${res.data.url}\")}`\r\n    };\r\n\r\n    const res2 = await axios.post(url, body2, config);\r\n\r\n    if (res2.data.data) {\r\n      dispatch({\r\n        type: 'UPDATE_AVATAR_SUCCESS',\r\n        payload: res2.data.data.updateAvatar\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'UPDATE_AVATAR_FAIL',\r\n        payload: 'unable to load to server'\r\n      });\r\n    }\r\n  } catch (error) {\r\n    if (localStorage.token) {\r\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\r\n        'token'\r\n      );\r\n    }\r\n    dispatch({\r\n      type: 'UPDATE_AVATAR_FAIL',\r\n      payload: error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getImages = (page, search) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = {\r\n    query: `query{\r\n    images(page:${page}, search:\"${search}\"){\r\n      images{\r\n      id\r\n      user_id\r\n      src\r\n      name\r\n      avatar\r\n      userName\r\n      user_id\r\n      },\r\n      lastImage\r\n    }\r\n  }`\r\n  };\r\n\r\n  const res = await axios.post(url, body, config);\r\n  if (res.data.data) {\r\n    dispatch({\r\n      type: 'GET_IMAGES',\r\n      payload: res.data.data.images\r\n    });\r\n  } else {\r\n    if (res.data.errors.message) {\r\n      const [err] = res.data.errors.message;\r\n      dispatch({\r\n        type: 'GET_IMAGES_FAIL',\r\n        payload: err\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'GET_IMAGES_FAIL',\r\n        payload: 'Image not found'\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const uploadImage = (image, name, description) => async (dispatch) => {\r\n  console.log(image);\r\n  console.log('imprimiendo');\r\n\r\n  var formData = new FormData();\r\n  formData.append('file', image);\r\n  formData.append('upload_preset', CLAUDINARY_UPLOAD_PRESET);\r\n\r\n  const body = formData;\r\n\r\n  const config2 = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    const res = await axios.post(CLAUDINARY_URL, body);\r\n    if (localStorage.token) {\r\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\r\n        'token'\r\n      );\r\n    }\r\n\r\n    dispatch({\r\n      type: 'UPLOAD_IMAGE_CLOUD_SUCCESS',\r\n      payload: res.data.url\r\n    });\r\n\r\n    const body2 = {\r\n      query: `mutation{\r\n      createImage(data:{name:\"${name}\", src:\"${res.data.url}\", description:\"${description}\"}){\r\n        id\r\n        user_id\r\n        src\r\n        name\r\n        description\r\n        } \r\n    }`\r\n    };\r\n    const res2 = await axios.post(url, body2, config2);\r\n    if (res2.data.data) {\r\n      dispatch({\r\n        type: 'UPLOAD_IMAGE_SUCCESS',\r\n        payload: res2.data.data.createImage\r\n      });\r\n      dispatch({\r\n        type: 'SET_SHOW_UPLOAD_IMAGE',\r\n        payload: 'hidden'\r\n      });\r\n    } else {\r\n      const [err] = res2.data.errors.message;\r\n      dispatch({\r\n        type: 'UPLOAD_IMAGE_FAIL',\r\n        payload: err\r\n      });\r\n    }\r\n  } catch (error) {\r\n    if (localStorage.token) {\r\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\r\n        'token'\r\n      );\r\n    }\r\n    dispatch({\r\n      type: 'UPLOAD_IMAGE_FAIL',\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\util.js",[],["127","128"],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\utils.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\imageItems.js",["129"],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\ImageItems.js",["130","131","132"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport loading from '../../img/loading.gif';\r\nimport perfil from '../../img/perfil.jpg';\r\nconst ImageItems = ({ image, loadingImages }) => {\r\n  const [show, setShow] = useState('hidden');\r\n  return loadingImages ? (\r\n    <div className='relative min-width mt-1 mx-1 flex items-center justify-center'>\r\n      <img src={loading} alt='loading gift' className='' />\r\n    </div>\r\n  ) : (\r\n    <div\r\n      className='relative  mt-1 mx-1 min-width'\r\n      onMouseEnter={() => setShow('')}\r\n      onMouseLeave={() => setShow('hidden')}\r\n    >\r\n      <a href={image.src} className='' target='_blank'>\r\n        <img\r\n          src={image.src}\r\n          alt=''\r\n          className='relative cursor-pointer img-w '\r\n        />\r\n      </a>\r\n\r\n      <span\r\n        className={`flex flex-row items-center absolute bottom-0 left-0  text-white w-full bg-black bg-opacity-50 ${show} `}\r\n      >\r\n        <Link to={`/profile/view/${image.user_id}`}>\r\n          <img\r\n            src={image.avatar ? image.avatar : perfil}\r\n            alt={image.name}\r\n            className='ml-3 w-10 h-10 my-2 rounded-full mr-3 cursor-pointer object-cover'\r\n          />\r\n        </Link>\r\n\r\n        <p>{image.userName}</p>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageItems.propTypes = {};\r\n\r\nexport default ImageItems;\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\profile\\MyProfile.js",["133","134","135"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport UploadAvatar from '../images/UploadAvatar';\r\nimport Footer from '../layout/Footer';\r\nimport { showUploadAvatar } from '../../actions/utils';\r\nimport { updateProfile } from '../../actions/profiles';\r\nimport UploadImage from '../images/UploadImage';\r\nimport perfil from '../../img/perfil.jpg';\r\n\r\nconst MyProfile = ({ user, showUploadAvatar, updateProfile, successAlert }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [success, setSuccess] = useState({\r\n    name: 'name',\r\n    email: 'email',\r\n    password: 'password'\r\n  });\r\n\r\n  const [hide, setHide] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  useEffect(() => {\r\n    setForm({ name: user.name, email: user.email });\r\n  }, [user]);\r\n  const { name, email, password } = form;\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    console.log(e.target.name);\r\n    if (e.target.name === 'name') {\r\n      setHide({ ...hide, name: 'hidden' });\r\n    }\r\n    console.log(hide);\r\n    if (e.target.name === 'email') {\r\n      setHide({ ...hide, email: 'hidden' });\r\n    }\r\n\r\n    if (e.target.name === 'password') {\r\n      setHide({ ...hide, password: 'hidden' });\r\n    }\r\n  };\r\n\r\n  const saveName = (e) => {\r\n    e.preventDefault();\r\n    updateProfile(name, '', '');\r\n    setHide({ ...hide, name: '' });\r\n  };\r\n\r\n  const savePassword = (e) => {\r\n    e.preventDefault();\r\n    if (password) {\r\n      updateProfile('', '', password);\r\n      setHide({ ...hide, password: '' });\r\n    }\r\n  };\r\n\r\n  const saveEmail = (e) => {\r\n    e.preventDefault();\r\n    updateProfile('', email, '');\r\n    setHide({ ...hide, email: '' });\r\n  };\r\n  return (\r\n    <div className='flex flex-col w-full  relative'>\r\n      <Navbar />\r\n      <UploadAvatar />\r\n      <UploadImage />\r\n      <div className='grid grid-cols-2  mt-4 mx-2 self-center gap-y-2  profile-grid-w'>\r\n        <div className='bg-gray-200  rounded-l-md  pl-12 items-start justify-center flex flex-col h-40  h-m '>\r\n          <h1 className='text-2xl font-bold font-serif text-gray-600'>Name</h1>\r\n          <p className='text-gray-400 pt-4 '>\r\n            change your name so they can better identify you{' '}\r\n          </p>\r\n        </div>\r\n\r\n        <form\r\n          onSubmit={(e) => saveName(e)}\r\n          className='relative bg-white border flex flex-row items-center justify-center px-12 '\r\n        >\r\n          <label htmlFor='name' className='label block font-serif  w-24'>\r\n            Full Name\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            placeholder='Jhon Doe'\r\n            className=' text-center login-input-w py-5 px-3 border-solid border-2 border-gray-200 rounded-md'\r\n            required\r\n            onChange={(e) => onChange(e)}\r\n            value={name}\r\n          />\r\n          <button\r\n            type='submit'\r\n            className=' bg-blue-500 text-white py-5 px-5 hover:bg-blue-600 ml-5 rounded'\r\n          >\r\n            Save\r\n          </button>\r\n\r\n          <span\r\n            className={`absolute text-green-500 bottom-0 mb-3 ${hide.name}`}\r\n          >\r\n            {successAlert.name}\r\n          </span>\r\n        </form>\r\n\r\n        <div className='bg-gray-200 pl-12 rounded-l-md   items-start justify-center flex flex-col h-40  h-m '>\r\n          <h1 className='text-2xl font-bold font-serif text-gray-600'>Email</h1>\r\n          <p className='text-gray-400 pt-4 '>Change your email </p>\r\n        </div>\r\n\r\n        <form\r\n          onSubmit={(e) => saveEmail(e)}\r\n          className='relative bg-white border flex flex-row items-center justify-center px-12 '\r\n        >\r\n          <label htmlFor='email' className='label block font-serif w-24'>\r\n            Email\r\n          </label>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            placeholder='example@example.com'\r\n            className=' text-center login-input-w py-5 px-3 border-solid border-2 border-gray-200 rounded-md'\r\n            required\r\n            onChange={(e) => onChange(e)}\r\n            value={email}\r\n          />\r\n          <button\r\n            type='submit'\r\n            className=' bg-blue-500 text-white py-5 px-5 hover:bg-blue-600 ml-5 rounded'\r\n          >\r\n            Save\r\n          </button>\r\n\r\n          <span\r\n            className={`absolute text-green-500 bottom-0 mb-3 ${hide.email}`}\r\n          >\r\n            {successAlert.email}\r\n          </span>\r\n        </form>\r\n\r\n        <div\r\n          onSubmit={(e) => savePassword(e)}\r\n          className='bg-gray-200  rounded-l-md  pl-12 items-start justify-center flex flex-col h-40 h-m '\r\n        >\r\n          <h1 className='text-2xl font-bold font-serif text-gray-600'>\r\n            Password\r\n          </h1>\r\n          <p className='text-gray-400 pt-4 '>\r\n            Change your password for more security{' '}\r\n          </p>\r\n        </div>\r\n\r\n        <form className='relative bg-white border flex flex-row items-center justify-center px-12 '>\r\n          <label htmlFor='password' className='label block font-serif w-24'>\r\n            Password\r\n          </label>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            placeholder='**************************'\r\n            className=' text-center login-input-w py-5 px-3 border-solid border-2 border-gray-200 rounded-md'\r\n            required\r\n            onChange={(e) => onChange(e)}\r\n            value={password}\r\n          />\r\n          <button\r\n            type='submit'\r\n            className=' bg-blue-500 text-white py-5 px-5 hover:bg-blue-600 ml-5 rounded'\r\n          >\r\n            Save\r\n          </button>\r\n          <span\r\n            className={`absolute text-green-500 bottom-0 mb-3 ${hide.password}`}\r\n          >\r\n            {successAlert.password}\r\n          </span>\r\n        </form>\r\n\r\n        <div className='bg-gray-200  rounded-l-md  pl-12 items-start justify-center flex flex-col h-40 h-m'>\r\n          <h1 className='text-2xl font-bold font-serif text-gray-600'>\r\n            Avatar\r\n          </h1>\r\n          <p className='text-gray-400 pt-4 '>\r\n            change your profile picture so people can get to know you\r\n          </p>\r\n        </div>\r\n\r\n        <div className='bg-white border flex flex-row items-center justify-center px-12  border-image'>\r\n          <label htmlFor='photo' className='label block font-serif w-24'>\r\n            Avatar\r\n          </label>\r\n          <div className='login-input-w px-3 border-gray-200 rounded-md flex flex-row items-center h-32 justify-center'>\r\n            <img\r\n              className=' h-full w-full rounded'\r\n              src={user.avatar ? user.avatar : perfil}\r\n              alt={user.name}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=' bg-blue-500 text-white py-5 px-2 hover:bg-blue-600 ml-5  rounded'\r\n            onClick={() => showUploadAvatar('')}\r\n          >\r\n            Change\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='w-full mt-12'>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMyProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  showUploadAvatar: PropTypes.func.isRequired,\r\n  updateProfile: PropTypes.func.isRequired,\r\n  successAlert: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n  successAlert: state.profile.updateProfile.success\r\n});\r\n\r\nexport default connect(mapStateToProps, { showUploadAvatar, updateProfile })(\r\n  MyProfile\r\n);\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\profile\\ProfileView.js",["136","137","138"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport Footer from '../layout/Footer';\r\nimport { getProfile } from '../../actions/profiles';\r\nimport { resetPage, setPage } from '../../actions/utils';\r\nimport { connect } from 'react-redux';\r\nimport UploadAvatar from '../images/UploadAvatar';\r\nimport UploadImage from '../images/UploadImage';\r\nimport imageLoading from '../../img/loading.gif';\r\nimport perfil from '../../img/perfil.jpg';\r\n\r\nconst ProfileView = ({\r\n  match,\r\n  profile: { user, images, lastImage },\r\n  getProfile,\r\n  loading,\r\n  resetPage,\r\n  page,\r\n  setPage\r\n}) => {\r\n  var checkLastImage = '';\r\n  useEffect(() => {\r\n    resetPage();\r\n    getProfile(match.params.id, 1);\r\n    console.log('pase por aqui');\r\n  }, [getProfile, match.params.id, resetPage]);\r\n\r\n  useEffect(() => {\r\n    getProfile(match.params.id, page);\r\n    console.log(lastImage, 'es este');\r\n  }, [page]);\r\n\r\n  const preview = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    if (images.some((image) => image.id !== lastImage) || images.length > 0) {\r\n      console.log(page);\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n  return loading ? (\r\n    <div className='flex items-center justify-center h-screen w-full'>\r\n      <img src={imageLoading} alt='loading' width='100rem' />\r\n    </div>\r\n  ) : (\r\n    <div className='flex flex-col h-full w-full'>\r\n      <Navbar />\r\n      <UploadAvatar />\r\n      <UploadImage />\r\n      <div className='flex justify-center items-center mt-12'>\r\n        <img\r\n          src={user.avatar ? user.avatar : perfil}\r\n          alt={user.name}\r\n          className='rounded-full w-36 h-36 mr-4 object-cover'\r\n        />\r\n\r\n        <h1 className='profile-name text-4xl'>{`${user.name}`}</h1>\r\n      </div>\r\n      <div className='flex flex-col w-64 items-start'>\r\n        <h3 className='mt-12 ml-2 mb-0 font-semibold text-gray-500 border-b-2 border-blue-500'>{`${user.name}'s photo collection`}</h3>\r\n      </div>\r\n\r\n      <div className='flex flex-wrap'>\r\n        {images.map((image) => (\r\n          <div className='min-width mt-1 mx-1 '>\r\n            <a href={image.src} className='' target='_blank'>\r\n              <img\r\n                src={image.src}\r\n                alt=''\r\n                className='w-full h-full object-cover'\r\n              />\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <nav className='flex flex-row bg-white shadow-md w-64 mx-auto justify-center rounded-full border bg-blue-500 mb-4 font-bold text-white mt-4'>\r\n        {page > 1 ? (\r\n          <div\r\n            onClick={() => preview()}\r\n            className='mr-auto cursor-pointer w-24 text-center border-r-2 border-white rounded-l-full hover:bg-blue-600'\r\n          >\r\n            <i class='fas fa-chevron-left'></i>\r\n          </div>\r\n        ) : (\r\n          <div className='mr-auto  w-24 text-center border-r-2 border-white rounded-l-full text-white'></div>\r\n        )}\r\n\r\n        <div className='text-white font-bold'>{page}</div>\r\n        {images.some((image) => image.id === lastImage) ? (\r\n          <div className='ml-auto w-24 text-center border-l-2 border-white rounded-r-full text-white'></div>\r\n        ) : (\r\n          <div\r\n            onClick={() => next()}\r\n            className='ml-auto cursor-pointer w-24 text-center border-l-2 border-white rounded-r-full  hover:bg-blue-600'\r\n          >\r\n            <i class='fas fa-chevron-right'></i>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileView.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getProfile: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  resetPage: PropTypes.func.isRequired,\r\n  setPage: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile.profile,\r\n  loading: state.profile.loading,\r\n  page: state.util.page\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, resetPage, setPage })(\r\n  ProfileView\r\n);\r\n","C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\actions\\profiles.js",[],"C:\\Users\\Fangio\\Desktop\\WEB\\pj-img\\client\\src\\components\\images\\UploadImage.js",["139","140"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { showUploadImage } from '../../actions/utils';\r\nimport { uploadImage } from '../../actions/images';\r\nimport { connect } from 'react-redux';\r\nconst UploadImage = ({\r\n  showUploadImage,\r\n  showWindow,\r\n  user,\r\n  uploadImage,\r\n  page,\r\n  search,\r\n  imageUpload,\r\n  imageUploadError\r\n}) => {\r\n  const [form, setForm] = useState({ image_name: '', image_description: '' });\r\n  const [uploadSuccess, setUploadSuccess] = useState('');\r\n  const { image_name, image_description } = form;\r\n  const [files, setFiles] = useState([]);\r\n  const [hideWindow, setHideWindow] = useState('');\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [showSpin, setShowSpin] = useState('hidden');\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setDisabled(true);\r\n    setShowSpin('');\r\n    if (acceptedFileItems.length > 0) {\r\n      acceptedFiles.map((file) =>\r\n        uploadImage(file, image_name, image_description)\r\n      );\r\n    } else {\r\n      setUploadSuccess('Please upload a image');\r\n      setDisabled(false);\r\n      setShowSpin('hidden');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDisabled(false);\r\n    setShowSpin('hidden');\r\n  }, [imageUpload, imageUploadError]);\r\n\r\n  const {\r\n    acceptedFiles,\r\n    fileRejections,\r\n    getRootProps,\r\n    getInputProps\r\n  } = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      );\r\n\r\n      setUploadSuccess('');\r\n    }\r\n  });\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name} className='mr-3'>\r\n      <div>\r\n        <img\r\n          src={file.preview}\r\n          width='100rem'\r\n          height='100rem'\r\n          alt='uploadedProfile'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const acceptedFileItems = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map((e) => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={`absolute bg-black flex  justify-center bg-opacity-50 w-full h-full ${showWindow} z-40`}\r\n    >\r\n      <div className='bg-white flex flex-col upload-w profile-name rounded upload-avatar-m'>\r\n        <div className='flex items-center py-3'>\r\n          <h1 className=' mr-auto ml-4 text-2xl'>\r\n            <span className='text-blue-600'>Upload</span> Image\r\n          </h1>\r\n          <i\r\n            className='fas fa-times mr-3 cursor-pointer'\r\n            onClick={() => showUploadImage('hidden')}\r\n          ></i>\r\n        </div>\r\n        <hr className='w-full' />\r\n        <form className='grid grid-area w-full ' onSubmit={(e) => onSubmit(e)}>\r\n          <div className='image-name self-center ml-3'>\r\n            <label htmlFor='image_name' className='text-lg text-gray-700'>\r\n              Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='image_name'\r\n              id='image_name'\r\n              placeholder='Image Name'\r\n              className='border-2 ml-4 p-3 rounded'\r\n              required\r\n              onChange={(e) => onChange(e)}\r\n              value={image_name}\r\n            />\r\n          </div>\r\n\r\n          <div className='image-description ml-3'>\r\n            <label\r\n              htmlFor='image_description'\r\n              className='text-lg text-gray-700'\r\n            >\r\n              Description\r\n            </label>\r\n            <textarea\r\n              name='image_description'\r\n              id='image_description'\r\n              cols='50'\r\n              rows='8'\r\n              className='border-2 block rounded mt-3 mr-3 pl-3 pt-3'\r\n              required\r\n              placeholder='Insert a description of the image'\r\n              onChange={(e) => onChange(e)}\r\n              value={image_description}\r\n            />\r\n          </div>\r\n\r\n          <div className=' flex relative container border-4 border-dashed drop-image items-center justify-center '>\r\n            <div\r\n              {...getRootProps({\r\n                className: 'dropzone relative h-full w-full z-10 cursor-pointer'\r\n              })}\r\n            >\r\n              <input {...getInputProps()} />\r\n            </div>\r\n            <div className='flex flex-col absolute items-center z-0 drop-mes'>\r\n              <div className=''>\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n              </div>\r\n              <div className='flex items-center justify-center mt-4'>\r\n                {thumbs}\r\n                <div className='flex flex-col items-center justify-center'>\r\n                  <ul>{acceptedFileItems}</ul>\r\n\r\n                  <ul>{fileRejectionItems}</ul>\r\n                  <ul className='text-red-500'>{uploadSuccess}</ul>\r\n                </div>\r\n                <div className={`ml-3 ${showSpin}`}>\r\n                  <i className='fas fa-spinner spin'></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='flex send-upload border-t-2  text-lg py-3'>\r\n            {disabled ? (\r\n              <input\r\n                type='button'\r\n                value='Upload'\r\n                className={`ml-auto mr-3 rounded py-1 px-4 bg-blue-200 text-white  cursor-text`}\r\n              />\r\n            ) : (\r\n              <input\r\n                type='submit'\r\n                value='Upload'\r\n                className={`ml-auto mr-3 rounded py-1 px-4 bg-blue-400 text-white hover:bg-blue-600 cursor-pointer`}\r\n              />\r\n            )}\r\n\r\n            <input\r\n              type='button'\r\n              value='Cancel'\r\n              className='rounded mr-4 py-1 px-4 hover:bg-gray-500 cursor-pointer'\r\n              onClick={() => showUploadImage('hidden')}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUploadImage.propTypes = {\r\n  showWindow: PropTypes.string.isRequired,\r\n  showUploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  search: PropTypes.string.isRequired,\r\n  imageUpload: PropTypes.object.isRequired,\r\n  imageUploadError: PropTypes.string.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  showWindow: state.util.showUploadImageWindow,\r\n  user: state.auth.user,\r\n  page: state.util.page,\r\n  search: state.util.search,\r\n  imageUpload: state.image.imageUpload,\r\n  imageUploadError: state.image.imageUploadError\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  showUploadImage,\r\n  uploadImage\r\n})(UploadImage);\r\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":13,"column":8,"nodeType":"147","messageId":"148","endLine":13,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"150","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":15},{"ruleId":"145","severity":1,"message":"151","line":12,"column":8,"nodeType":"147","messageId":"148","endLine":12,"endColumn":19},{"ruleId":"145","severity":1,"message":"152","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"153","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":27,"column":6,"nodeType":"156","endLine":27,"endColumn":14,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":32,"column":6,"nodeType":"156","endLine":32,"endColumn":25,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":34,"column":10,"nodeType":"147","messageId":"148","endLine":34,"endColumn":14},{"ruleId":"145","severity":1,"message":"161","line":34,"column":16,"nodeType":"147","messageId":"148","endLine":34,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"141","replacedBy":"162"},{"ruleId":"143","replacedBy":"163"},{"ruleId":"145","severity":1,"message":"149","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"164","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":18,"column":40,"nodeType":"167","endLine":18,"endColumn":55},{"ruleId":"145","severity":1,"message":"168","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"169","line":20,"column":10,"nodeType":"147","messageId":"148","endLine":20,"endColumn":17},{"ruleId":"145","severity":1,"message":"170","line":20,"column":19,"nodeType":"147","messageId":"148","endLine":20,"endColumn":29},{"ruleId":"145","severity":1,"message":"171","line":22,"column":7,"nodeType":"147","messageId":"148","endLine":22,"endColumn":21},{"ruleId":"154","severity":1,"message":"172","line":32,"column":6,"nodeType":"156","endLine":32,"endColumn":12,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"166","line":71,"column":46,"nodeType":"167","endLine":71,"endColumn":61},{"ruleId":"145","severity":1,"message":"174","line":21,"column":10,"nodeType":"147","messageId":"148","endLine":21,"endColumn":20},{"ruleId":"145","severity":1,"message":"175","line":21,"column":22,"nodeType":"147","messageId":"148","endLine":21,"endColumn":35},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'Gallery' is defined but never used.","'UploadImage' is defined but never used.","'Navbar' is defined but never used.","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadUser', 'setShowSpin', and 'showUploadAvatar'. Either include them or remove the dependency array. If 'showUploadAvatar' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'setShowSpin'. Either include it or remove the dependency array. If 'setShowSpin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["176"],["177"],"'Redirect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Link' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'checkLastImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'lastImage', and 'match.params.id'. Either include them or remove the dependency array. If 'getProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"'hideWindow' is assigned a value but never used.","'setHideWindow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [avatar, loadUser, setShowSpin, showUploadAvatar]",{"range":"187","text":"188"},"Update the dependencies array to be: [setShowSpin, uploadAvatarError]",{"range":"189","text":"190"},"Update the dependencies array to be: [getProfile, lastImage, match.params.id, page]",{"range":"191","text":"192"},[760,768],"[avatar, loadUser, setShowSpin, showUploadAvatar]",[853,872],"[setShowSpin, uploadAvatarError]",[953,959],"[getProfile, lastImage, match.params.id, page]"]